trigger :
- none

stages:

- stage: Terraform
  pool:
    vmImage: 'ubuntu-latest'
  jobs:
    - job: deploy_frontdoor
      steps:
      - task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-installer.TerraformInstaller@0
        displayName: 'Use Terraform latest'

      - task: TerraformTaskV3@3
        displayName: 'Terraform : init'
        inputs:
          provider: 'azurerm'
          command: init
          workingDirectory: '$(System.DefaultWorkingDirectory)/Terraform'
          backendServiceArm: 'IA+TDA'
          backendAzureRmResourceGroupName: tfbackend
          backendAzureRmStorageAccountName: tfbackendlogs
          backendAzureRmContainerName: tfbackendlogs
          backendAzureRmKey: /

      - task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-cli.TerraformCLI@0
        displayName: 'terraform plan'
        inputs:
          command: plan
          workingDirectory: '$(System.DefaultWorkingDirectory)/_IaC/_SB9/_TerraformDeployment/_Modules/_ResourceGroupCommon/'
          environmentServiceName: 'IA+TDA'

      - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV3@3
        displayName: 'Terraform : apply'
        inputs:
          command: apply
          workingDirectory: '$(System.DefaultWorkingDirectory)/_IaC/_SB9/_TerraformDeployment/_Modules/_ResourceGroupCommon/'
          environmentServiceNameAzureRM: 'IA+TDA'